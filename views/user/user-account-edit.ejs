
<link rel="stylesheet" href="/css/user-account.css">

<%- include("../../views/partials/user/header") %>

<div class="container-fluid" style="background-color: #f1f3f6;">
   
    <%- include("../../views/partials/user/breadcrumb") %>
   
    <div class="row">
        
        <div class="col-md-3">
            <%- include("../../views/partials/user/sidebar") %>
        </div>
        <div class="col-md-6 dashboard-content" id="dashboardContent">
            <div class="container">
                <h2>Personal Information</h2>
                <form id="personal-info-form">
                    <input type="hidden" id="userId" name="userId" value="<%= user._id %>">
                    <div class="form-group">
                        <label for="name">Name:</label>
                        <input type="text" id="name" name="name" value="<%= user.name %>" required disabled>
                        <span class="error-message" id="nameError"></span>
                    </div>
                    <div class="form-group">
                        <label>Gender:</label>
                        <div class="radio-group">
                            <label>
                                <input type="radio" name="gender" value="male" <%= user.gender === 'male' ? 'checked' : '' %> disabled required> Male
                            </label>
                            <label>
                                <input type="radio" name="gender" value="female" <%= user.gender === 'female' ? 'checked' : '' %> disabled required> Female
                            </label>
                            <span class="error-message" id="genderError"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="email">Email Address:</label>
                        <input type="email" id="email" name="email" value="<%= user.email %>" required disabled>
                        <span class="error-message" id="emailError"></span>
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone Number:</label>
                        <input type="tel" id="phone" name="phone" value="<%= user.phone %>" required disabled>
                        <span class="error-message" id="phoneError"></span>
                    </div>
                    <div class="button-group">
                        <button type="button" id="editBtn">Edit</button>
                        <button type="button" id="saveBtn" style="display:none;">Save</button>
                        <button type="button" id="cancelBtn" style="display:none;">Cancel</button>
                    </div>
                </form>
                
                <br>

                <!-- <div class="account-actions">
                    <a href="#" id="deactivateAccount">Deactivate Account</a>
                    <br>
                    <a href='/user/delete-account?id=<%= userId %>' id="deleteAccount" class="delete">Delete Account</a>
                </div> -->
                <h2>Manage Password</h2>
                <% if (user.password) { %>
                <form id="otpForm">
                
                    <input type="password" name="currentPassword" id="currentPassword" placeholder="Current Password" required>
                    <button type="submit" id="sendOtp">Change Password</button>
                </form>
                <% } else { %>
                    <a href="/login/forget-password">Create Password</a>
                    <% } %>
                <div id="alert-message" style="display:none; color: black;"></div>
                <div id="passwordSection" style="display: none;">
                    <input type="email" name="email" id="email" placeholder="Enter your email" value="<%= user.email %>" style="display: none; ">
                    <input type="password" name="newPassword" id="newPassword" placeholder="New Password" required />
                    <div id="error4" style="color: red; display: none;"></div>
                    <input type="password" name="confirmPassword" id="confirmPassword" placeholder="Confirm Password" required />
                    <div id="error5" style="color: red; display: none;"></div>
                    <button type="button" id="updatePassword">Update Password</button>
                    
                </div>
            </div> 

            
            <script>
               
                const alertMssage = document.getElementById('alert-message')
                document.getElementById("sendOtp").addEventListener("click", async () => {
                    event.preventDefault();
                    const currentPassword =await document.getElementById("currentPassword").value;
                    const response = await fetch("/send-currentPassword", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ currentPassword }),
                    });
                    const result = await response.json();
                    if (result.success) {
                        document.getElementById('alert-message').style.display = "block";
                        alertMssage.textContent = "Current password success. Enter new Password"
                        alertMssage.style.color="green"
                        document.getElementById("passwordSection").style.display = "block";
                        document.getElementById("currentPassword").style.display = "none";
                        document.getElementById("sendOtp").style.display = "none";
                    } else {
                        document.getElementById('alert-message').style.display = "block";
                        alertMssage.textContent = result.message;
                        alertMssage.style.color="red"
                    }
                });
            
            
                function passValidateChecking(event) {
                    const passval = document.getElementById("newPassword").value;
                    const cpassval = document.getElementById("confirmPassword").value;
                    const error4 = document.getElementById("error4");
                    const error5 = document.getElementById("error5");

                    const alpha = /[a-zA-Z]/;
                    const digit = /\d/;

                    // Check if password is at least 8 characters
                    if (passval.length < 8) {
                        error4.style.display = "block";
                        error4.innerHTML = "Should contain at least 8 characters";
                    } else if (!alpha.test(passval) || !digit.test(passval)) {
                        // Check if password contains both letters and numbers
                        error4.style.display = "block";
                        error4.innerHTML = "Should contain both numbers and letters";
                    } else {
                        error4.style.display = "none";
                        error4.innerHTML = "";
                    }

                    // Check if passwords match
                    if (passval !== cpassval) {
                        error5.style.display = "block";
                        error5.innerHTML = "Passwords do not match";
                    } else {
                        error5.style.display = "none";
                        error5.innerHTML = "";
                    }
                }

      
        document.getElementById("newPassword").addEventListener("input", passValidateChecking);
        document.getElementById("confirmPassword").addEventListener("input", passValidateChecking);

        
        document.getElementById("updatePassword").addEventListener("click", async () => {
            event.preventDefault();
            const newPassword = document.getElementById("newPassword").value;
            const confirmPassword = document.getElementById("confirmPassword").value;
            const error4 = document.getElementById("error4");
            const error5 = document.getElementById("error5");

          
            if (newPassword.length < 8 || !/[a-zA-Z]/.test(newPassword) || !/\d/.test(newPassword)) {
                error4.style.display = "block";
                error4.innerHTML = "Password must contain at least 8 characters, including both letters and numbers";
                return;  
            }

            if (newPassword !== confirmPassword) {
                error5.style.display = "block";
                error5.innerHTML = "Passwords do not match";
                return;  
            }

          
            try {
               
                const response = await fetch("/update-password", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ newPassword, confirmPassword }),
                });
                
                const result = await response.json();
             
                document.getElementById('alert-message').style.display = "block";
                        alertMssage.textContent = result.message
                        alertMssage.style.color="green"

                        document.getElementById("passwordSection").style.display = "none";
                
            } catch (error) {
                console.error("Error updating password:", error);
                alert("Error updating password, please try again.");
            }
        });
            </script>
            
        </div>
    </div>
    <%- include("../../views/partials/user/footer") %>
    <script src="js/jquery-2.2.3.min.js"></script>
    <!-- newsletter modal -->
    <!--search jQuery-->
    <script src="js/modernizr-2.6.2.min.js"></script>
    <script src="js/classie-search.js"></script>
    <script src="js/demo1-search.js"></script>
</div>

<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/user/user-account-delete.js"></script>

<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/js/user/user-account-delete.js"></script>

<script>
   const form = document.getElementById('personal-info-form');
const editBtn = document.getElementById('editBtn');
const saveBtn = document.getElementById('saveBtn');
const cancelBtn = document.getElementById('cancelBtn');
const inputs = form.querySelectorAll('input');

// Error message elements
const nameError = document.getElementById('nameError');
const genderError = document.getElementById('genderError');
const emailError = document.getElementById('emailError');
const phoneError = document.getElementById('phoneError');

// Toggle the editing state of the form
function toggleEditing(editable) {
    inputs.forEach(input => input.disabled = !editable);
    document.querySelectorAll('input[name="gender"]').forEach(radio => radio.disabled = !editable);
    editBtn.style.display = editable ? 'none' : 'inline-block';
    saveBtn.style.display = editable ? 'inline-block' : 'none';
    cancelBtn.style.display = editable ? 'inline-block' : 'none';
}

// Clear previous error messages
function clearErrorMessages() {
    document.querySelectorAll('.error-message').forEach(errorElement => {
        errorElement.textContent = '';
    });
}

// Validate form data
function validateForm(formData) {
    let isValid = true;

    if (!formData.name.trim()) {
        nameError.textContent = 'Name cannot be left empty.';
        isValid = false;
    }
    if (!formData.gender) {
        genderError.textContent = 'Gender must be selected.';
        isValid = false;
    }
    if (!formData.email.includes('@')) {
        emailError.textContent = 'Please enter a valid email address.';
        isValid = false;
    }
    if (!/^\d{10}$/.test(formData.phone)) {
        phoneError.textContent = 'phone number must contain 10 digits.';
        isValid = false;
    }

    return isValid;
}

// Event Listeners
editBtn.addEventListener('click', () => toggleEditing(true));

cancelBtn.addEventListener('click', () => {
    toggleEditing(false);
    clearErrorMessages();
    form.reset(); 
});

saveBtn.addEventListener('click', (event) => {
    event.preventDefault();
    clearErrorMessages();

    const formData = {
        name: document.getElementById('name').value,
        gender: document.querySelector('input[name="gender"]:checked') ? document.querySelector('input[name="gender"]:checked').value : '',
        email: document.getElementById('email').value,
        phone: document.getElementById('phone').value,
    };

    if (validateForm(formData)) {
        const userId = document.getElementById('userId').value;

        fetch(`/user/account/edit-user/${userId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.success
                });
                toggleEditing(false);
            } else if (data.message) {
                if (data.message.includes("phone number already exists")) {
                    phoneError.textContent = data.message;
                } else if (data.message.includes("You can update contact details from Google")) {
                    Swal.fire({
                        icon: 'info',
                        title: 'Information',
                        text: data.message
                    });
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Warning',
                        text: data.message
                    });
                }
            } else if (data.error) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.error
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops',
                text: 'An error occurred while updating the data.'
            });
        });
    }
});

    </script>
    