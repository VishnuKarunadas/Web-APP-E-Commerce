<%- include("../../views/partials/admin/header") %>

<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>

<style>
   .error-message {
       color: red;
   }

   .thumbnails-container {
       display: flex;
       overflow-x: auto;
   }

   .thumbnail {
       margin-right: 10px;
   }

   /* Ensure the content-main section is displayed correctly */
   .content-main {
       padding: 20px; /* Adjust padding as needed */
   }

   .content-header {
       margin-bottom: 20px; /* Adds space between the header and the form */
   }

   .card-body {
       padding: 20px; /* Adds space inside the card */
   }

   .image-cropper {
       display: none; /* Hide the cropper by default */
   }
</style>

<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Add New Product</h2>
    </div>
    <div class="row">
        <div class="col-lg-12"> <!-- Adjusted to full width for proper display -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/addProducts" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <br>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <br>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <br>
                                    <input placeholder="₹" name="regularPrice" type="text" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <br>
                                    <input placeholder="₹" name="salePrice" type="text" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <br>
                                    <input placeholder="S Quantity" name="quantityS" type="text" class="form-control border" id="quantity_s">
                                    <input placeholder="M Quantity" name="quantityM" type="text" class="form-control border" id="quantity_m">
                                    <input placeholder="L Quantity" name="quantityL" type="text" class="form-control border" id="quantity_l">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <br>
                                    <input name="color" type="text" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>

                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <br>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for(let i=0;i<cat.length;i++){%>
                                                <option value="<%=cat[i].name%>">
                                                    <%=cat[i].name%>
                                                </option>
                                            <%}%>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                <img src="" alt="" id="imgView1">
                                                            <input class="form-control" type="file" name="images1" id="input1"
                                                                accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage1(event), viewImage(event, 1)">
                                                                <div id="images-error" class="error-message"></div>
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg1" alt="">
                                                            <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>
                                                                                                           
                                                    <div class="row">
                                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView2">


                                                            <input class="form-control" type="file" name="images2" id="input2"
                                                                accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage2(event),viewImage(event, 2)">
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg2" alt="">
                                                            <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>
                                                   
                                                    <div class="row">
                                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView3">


                                                            <input class="form-control" type="file" name="images3" id="input3"
                                                                accept="image/png, image/jpeg, image/jpg"
                                                                onchange="viewImage3(event),viewImage(event, 3)">
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg3" alt="">
                                                            <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>

                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" type="button" onclick="validateAndSubmit()">Publish</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>


<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>

function validateAndSubmit() {
    if (validateForm()) {
        document.forms[0].submit();
    }
}

function viewImage1(event) {
    document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0]);
}

function viewImage2(event) {
    document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0]);
}

function viewImage3(event) {
    document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0]);
}


function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();

    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById("imgView" + index);
        image.src = dataURL;

        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true,
        });

        let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
        cropperContainer.style.display = 'block';

        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;

           
            await croppedCanvas.toBlob(blob => {
                let inputField = document.getElementById('input' + index);
                let file = new File([blob], fileName, { type: 'image/png' });

                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                inputField.files = dataTransfer.files; 
            });

            
            cropperContainer.style.display = 'none';
            cropper.destroy();
        });
    };

    reader.readAsDataURL(input.files[0]);
}


const selectedImages = [];
document.getElementById("input1").addEventListener("change", handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById("addedImagesContainer");
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;
    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);
        const thumbnail = document.createElement("div");
        thumbnail.classList.add("thumbnail");

        const img = document.createElement("img");
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";
        
        const removeIcon = document.createElement("span");
        removeIcon.classList.add("remove-icon");
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener("click", function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
}

function validateForm() {
    clearErrorMessages();

    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName('salePrice')[0].value;
    const quantityS = document.getElementsByName('quantityS')[0].value;
    const quantityM = document.getElementsByName('quantityM')[0].value;
    const quantityL = document.getElementsByName('quantityL')[0].value;

    

    let isValid = true;

    // Product name validation
    if (name.trim() === "") {
        displayErrorMessage('product_name-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s.,\/\-:;()&\[\]'"!?]*$/.test(name.trim())) {
        displayErrorMessage('product_name-error', 'Product name should contain only alphabetic characters and numbers.');
        isValid = false;
    }

    // Description validation
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    // Price and quantity validations
    if (price.trim() === "" || isNaN(price)) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid price.');
        isValid = false;
    }

    if (salePrice.trim() === "" || isNaN(salePrice)) {
        displayErrorMessage('salePrice-error', 'Please enter a valid sale price.');
        isValid = false;
    }

    if (quantityS.trim() === "" || isNaN(quantityS) || quantityS < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid quantity for Small.');
        isValid = false;
    }
    if (quantityM.trim() === "" || isNaN(quantityM) || quantityM < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid quantity for Medium.');
        isValid = false;
    }
    if (quantityL.trim() === "" || isNaN(quantityL) || quantityL < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid quantity for Large.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    document.getElementById(elementId).innerText = message;
}

function clearErrorMessages() {
    const errorMessages = document.querySelectorAll('.error-message');
    errorMessages.forEach(function (element) {
        element.innerText = "";
    });
}
</script>

<%- include("../../views/partials/admin/footer") %>
