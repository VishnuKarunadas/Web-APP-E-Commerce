<%- include("../../views/partials/admin/header") %>

<head>
    <style>
        .thumbnails-container {
            display: flex;
            overflow-x: auto;
        }
        .thumbnail {
            margin-right: 10px;
        }
        .input-upload {
            position: relative;
        }
        .error-message {
            color: red;
            display: none;
        }
        .image-cropper {
            display: none;
            width: 300px;
            height: 200px;
            margin-bottom: 20px;
        }
        .cropper-container {
            position: relative;
        }
        .cropper-container img {
            max-width: 100%;
            max-height: 100%;
        }
        .remove-icon {
            position: absolute;
            margin-left: 0.5rem;
            cursor: pointer;
        }
    </style>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>

<section class="content-main">
    <div class="row">
        <div class="col-12">
            <div class="content-header">
                <h2 class="content-title">Edit Product</h2>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" name="productName" value="<%= product.productName %>" class="form-control" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full Description</label>
                            <textarea name="description" class="form-control" rows="4"><%= product.description %></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular Price</label>
                                    <input placeholder="$" name="regularPrice" type="text" value="<%= product.regularPrice %>" class="form-control">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale Price</label>
                                    <input name="salePrice" type="text" value="<%= product.salePrice %>" class="form-control">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity (S)</label>
                                    <input name="quantityS" type="text" value="<%= product.quantity.S || 0 %>" class="form-control">
                                    <div id="quantityS-error" class="error-message"></div>
                                </div>
                            </div>
                            
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity (M)</label>
                                    <input name="quantityM" type="text" value="<%= product.quantity.M || 0 %>" class="form-control">
                                    <div id="quantityM-error" class="error-message"></div>
                                </div>
                            </div>
                            
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity (L)</label>
                                    <input name="quantityL" type="text" value="<%= product.quantity.L || 0 %>" class="form-control">
                                    <div id="quantityL-error" class="error-message"></div>
                                </div>
                            </div>
                            
                            
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" value="<%= product.color %>" class="form-control">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Category</label>
                                    <select class="form-select" name="category">
                                        <% cat.forEach(category => { %>
                                            <option value="<%= category.name %>" <%= product.category.name === category.name ? 'selected' : '' %>>
                                                <%= category.name %>
                                            </option>
                                        <% }); %>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose Images</h4>
                            </div>
                            <div class="card-body">
                                <% for (let i = 0; i < 3; i++) { %>
                                    <div class="cropper-container mb-4" id="image-container-<%= i %>">
                                        <% if (i < product.productImage.length) { %>
                                            <img class="rounded" style="width: 50px; height: 60px;" src="/uploads/product-images/<%= product.productImage[i] %>" alt="">
                                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>', <%= i %>)">Remove</button>
                                        <% } else { %>
                                            <p>No image</p>
                                        <% } %>
                                    </div>
                                    <div class="image-cropper" id="imageCropper<%= i + 1 %>">
                                        <img src="" alt="" id="croppedImg<%= i + 1 %>">
                                        <button type="button" id="saveButton<%= i + 1 %>" class="btn btn-primary btn-sm">Save</button>
                                    </div>
                                    <div class="mb-3">
                                        <input class="form-control" type="file" name="images<%= i + 1 %>" id="input<%= i + 1 %>" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, <%= i + 1 %>)" <%= i < product.productImage.length ? 'disabled' : '' %>>
                                        <div id="images-error<%= i + 1 %>" class="error-message"></div>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                        <button class="btn btn-primary" type="submit">Update</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>
    function validateForm() {
    clearErrorMessages();

    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementById('descriptionid').value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName('salePrice')[0].value;
    const quantityS = document.getElementsByName('quantityS')[0].value;
    const quantityM = document.getElementsByName('quantityM')[0].value;
    const quantityL = document.getElementsByName('quantityL')[0].value;

    console.log(name);

    let isValid = true;

    // Product name validation
    if (name.trim() === "") {
        displayErrorMessage('product_name-error', 'Please enter a product name.');
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s.,\/\-:;()&\[\]'"!?]*$/.test(name.trim())) {
        displayErrorMessage('product_name-error', 'Product name should contain only alphabetic characters and numbers.');
        isValid = false;
    }

    // Description validation
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }

    // Price and quantity validations
    if (price.trim() === "" || isNaN(price)) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid price.');
        isValid = false;
    }

    if (salePrice.trim() === "" || isNaN(salePrice)) {
        displayErrorMessage('salePrice-error', 'Please enter a valid sale price.');
        isValid = false;
    }

    if (quantityS.trim() === "" || isNaN(quantityS) || quantityS < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid quantity for Small.');
        isValid = false;
    }
    if (quantityM.trim() === "" || isNaN(quantityM) || quantityM < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid quantity for Medium.');
        isValid = false;
    }
    if (quantityL.trim() === "" || isNaN(quantityL) || quantityL < 0) {
        displayErrorMessage('quantity-error', 'Please enter a valid quantity for Large.');
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    var errorElement = document.getElementById(elementId);
    errorElement.innerText = message;
    errorElement.style.display = "block";
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.innerText = '';
        element.style.display = "none";
    });
}

function viewImage(event, index) {
    let input = event.target;
    let reader = new FileReader();
    reader.onload = function () {
        let dataURL = reader.result;
        let image = document.getElementById('imgView' + index);
        image.src = dataURL;
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });
        let cropperContainer = document.querySelector('#imageCropper' + index);
        cropperContainer.style.display = 'block';
        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;
            await croppedCanvas.toBlob(blob => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, { type: 'image/png' });
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });
            cropperContainer.style.display = 'none';
            
            let imageContainer = document.getElementById('image-container-' + (index - 1));
            imageContainer.innerHTML = `
                <img class="rounded" style="width: 50px; height: 60px;" src="${croppedImage.src}" alt="">
                <button type="button" onclick="deleteSingleImage('${fileName}', '<%= product._id %>', ${index - 1})"><i class="fas fa-times"></i></button>
            `;
        });
    };
    reader.readAsDataURL(input.files[0]);
}

function deleteSingleImage(imageId, productId, index) {
    $.ajax({
        url: "/admin/deleteImage",
        method: "post",
        data: { imageNameToServer: imageId, productIdToServer: productId },
        success: (response) => {
            if (response.status === true) {
                let imageContainer = document.getElementById('image-container-' + index);
                imageContainer.innerHTML = '<p>No image</p>';
                
                let fileInput = document.getElementById('input' + (index + 1));
                fileInput.disabled = false;
            }
        }
    });
}
</script>

<%- include("../../views/partials/admin/footer") %>